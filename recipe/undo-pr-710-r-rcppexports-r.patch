diff --git a/R/RcppExports.R b/R/RcppExports.R
index e2a01512..294e0ebc 100644
--- a/R/RcppExports.R
+++ b/R/RcppExports.R
@@ -1184,40 +1184,3 @@ vlcbuf_from_shmem <- function(datapath, dtype) {
     .Call(`_tiledb_vlcbuf_from_shmem`, datapath, dtype)
 }
 
-#' Create a custom file connection
-#'
-#' @details
-#' This \code{vfs_file()} connection works like the \code{file()} connection in R itself.
-#'
-#' This connection works with both ASCII and binary data, e.g. using
-#' \code{readLines()} and \code{readBin()}.
-#'
-#' @param description path to a filename; contrary to \code{rconnection} a connection
-#' object is not supported.
-#' @param mode character string. A description of how to open the connection if
-#' it is to be opened upon creation e.g. "rb". Default "" (empty string) means
-#' to not open the connection on creation - user must still call \code{open()}.
-#' Note: If an "open" string is provided, the user must still call \code{close()}
-#' otherwise the contents of the file aren't completely flushed until the
-#' connection is garbage collected.
-#' @param verbosity integer value 0, 1, or 2. Default: 0.
-#' Set to \code{0} for no debugging messages, \code{1} for some high-level messages
-#' and \code{verbosity = 2} for all debugging messages.
-#'
-#' @export
-#'
-#' @examples
-#' \dontrun{
-#' tmp <- tempfile()
-#' dat <- as.raw(1:255)
-#' writeBin(dat, vfs_file(tmp))
-#' readBin(vfs_file(tmp),  raw(), 1000)
-#' }
-vfs_file <- function(description, mode = "", verbosity = 0L) {
-    .Call(`_tiledb_vfs_file`, description, mode, verbosity)
-}
-
-tldb_init_ <- function(nc_xptr) {
-    invisible(.Call(`_tiledb_tldb_init_`, nc_xptr))
-}
-
